5.변수, 상수, 리터럴
>>변수(variable) - 하나의 값을 저장하기 위한 공간    >>변경OO
>>상수(constant) - 한 번만 값을 저장 가능한 변수    >>변경XX
        >>코틀린의 value와 유사합니다.
int score = 100;
score = 200;
final int MAX =100; //MAX는 상수
>>상수는 값을 바꿀수 없습니다.
MAX = 200; //에러

>>리터럴 -  그 자체로 값을 의미하는 것
    >>상수의 개념과 거의 같다
    >>왜 사용???
        >>

6.리터럴의 접두사와 접미사
종류      리터럴                             접미사
논리형     false,true                          없음
정수형     123,0b0101,100L                     L(literal)
실수형     3.14, 3.0e8,1.4f.0X1.0p-1           f(float).d(double)>>생략가능
문자형     'A','11','\n'                       없음
>>\n > 개행
문자열     'ABC','123','A'                     없음

boolean power =true;;
char ch ='A';
string str ="ABC";
byte b =127; >> int타입임 바이트타입은 -128 ~127까지만 해당합니다..
int i =100; //10진수
int oct = 0100; //8진수
int hex = 0x100; //16진수

long l ; 10_100_100_100L; _는 알아보기 쉬우라고 넣어주는 값입니다
long l =100; (생략이 가능합니다)

float f =3.14f; (f생략 불가능)
double d =3.14d; (d생략가능)

 10. >> 10.0
 .10 >> 0.10 (더블타입의 리터럴)
 10f >> 실수형 리터럴 >> 10.0f
 1e3 >>10의 3제곱 e는 실수형에 사용되기에 실수임 >> 1000.0 더블타입

7.변수와 리터럴의 타입 불일치
    1)범위가 '변수 > 리터럴'인 경우 , OK
        int i ='A' ; // int > char
        long l =123 ; // long >int
        double d = 3.14f ; //double >float
    2)범위가 '변수 <리터럴' 인 경우 , 에러
        int i '30_0000_0000'; // int의 범위ㅣ (+-20억)벗어납니다. 에러발생
        long l =3.14f ; ///long < double
    3)byte , short 변수에 int 리터럴 저장가능
    단, 변수의 타입의 범위 이내이어야 함
        byte b =100 ; // OK, 바이트 범위내
        byte b =128 ; //에러












